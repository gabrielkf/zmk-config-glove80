/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define R_LAYER 1
#define L_LAYER 2
#define LOWER 3
#define MAGIC 4

/ {
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        layer_td: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };

        rpi: require_prior_idle {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };

        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };

        nword: next_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LALT>
                ;
        };

        pword: previous_word {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LALT>
                ;
        };

        sel_all: sel_all_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp A>
                , <&macro_release &kp LGUI>
                ;
        };

        cut: cut_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp X>
                , <&macro_release &kp LGUI>
                ;
        };

        copy: copy_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp C>
                , <&macro_release &kp LGUI>
                ;
        };

        paste: paste_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp V>
                , <&macro_release &kp LGUI>
                ;
        };

        undo: undo_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LGUI>
                ;
        };

        redo: redo_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_press &kp LSHIFT>
                , <&macro_tap &kp Z>
                , <&macro_release &kp LSHIFT>
                , <&macro_release &kp LGUI>
                ;
        };

        home: home_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp LEFT>
                , <&macro_release &kp LGUI>
                ;
        };

        end: end_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp RIGHT>
                , <&macro_release &kp LGUI>
                ;
        };

        top: top_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp UP>
                , <&macro_release &kp LGUI>
                ;
        };

        bottom: bottom_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LGUI>
                , <&macro_tap &kp DOWN>
                , <&macro_release &kp LGUI>
                ;
        };

        print: print_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_press &kp RIGHT_SHIFT>
                , <&macro_tap &kp N4>
                , <&macro_release &kp RGUI>
                , <&macro_release &kp RIGHT_SHIFT>
                ;
        };

        find: find_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp F>
                , <&macro_release &kp RGUI>
                ;
        };

        next: next_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp D>
                , <&macro_release &kp RGUI>
                ;
        };

        all: all_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp F2>
                , <&macro_release &kp RGUI>
                ;
        };

        format: format_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LEFT_SHIFT>
                , <&macro_press &kp RALT>
                , <&macro_tap &kp F>
                , <&macro_release &kp RALT>
                , <&macro_release &kp LEFT_SHIFT>
                ;
        };

        new_tab: new_tab_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp T>
                , <&macro_release &kp RGUI>
                ;
        };

        refresh: refresh_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp R>
                , <&macro_release &kp RGUI>
                ;
        };

        close: close_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp W>
                , <&macro_release &kp RGUI>
                ;
        };

        quit: quit_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RGUI>
                , <&macro_tap &kp Q>
                , <&macro_release &kp RGUI>
                ;
        };

        blame: blame_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RCTRL>
                , <&macro_tap &kp B>
                , <&macro_release &kp RCTRL>
                ;
        };

        cancel: cancel_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp RCTRL>
                , <&macro_tap &kp C>
                , <&macro_release &kp RCTRL>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp F1             &kp F2          &kp F3            &kp F4           &kp F5                                                                                                                                       &kp F8       &kp F9           &kp F10           &kp F11            &kp F12
            &kp N1             &kp N2          &kp N3            &kp N4           &kp N5           &kp N6                                                                                                           &kp N7     &kp N8       &kp N9           &kp N0            &kp MINUS          &kp EQUAL
            &kp TAB            &kp Q           &kp W             &kp E            &kp R            &kp T                                                                                                            &kp Y      &kp U        &kp I            &kp O             &kp P              &kp LBKT
            &kp CAPS           &rpi LSHIFT A   &rpi LCTRL S      &rpi LALT D      &rpi LGUI F      &kp G                                                                                                            &kp H      &rpi RGUI J  &rpi RALT K      &rpi RCTRL L      &rpi LSHIFT SEMI   &kp SQT
            &rpi LSHIFT GRAVE  &kp Z           &kp X             &kp C            &kp V            &kp B   &rpi LGUI SPACE   &rpi LALT RET     &layer_td        &layer_td       &rpi RALT GRAVE   &rpi RGUI TAB     &kp N      &kp M        &kp COMMA        &kp DOT           &kp FSLH           &rpi RSHIFT RBKT
            &magic MAGIC 0     &home           &end              &kp LEFT         &kp RIGHT                &kp BSPC          &lt L_LAYER ESC   &kp DEL          &rpi RCTRL RET  &kp BSPC          &lt R_LAYER SPACE            &kp DOWN     &kp UP           &kp PG_UP         &kp PG_DN          &kp BSLH
            >;
        };

        right {
            bindings = <
            &trans      &trans      &trans       &trans       &trans                                                                                            &top        &kp PG_UP    &bottom      &all         &kp F5
            &trans      &trans      &trans       &trans       &trans       &trans                                                                 &print        &home       &kp PG_DN    &end         &cancel      &sel_all
            &trans      &trans      &trans       &trans       &trans       &trans                                                                 &cut          &pword      &kp UP       &nword       &trans       &new_tab
            &trans      &trans      &trans       &trans       &trans       &trans                                                                 &copy         &kp LEFT    &kp DOWN     &kp RIGHT    &kp RSHIFT   &refresh
            &trans      &trans      &trans       &trans       &trans       &trans      &trans   &trans   &trans      &trans   &trans   &trans     &paste        &find       &next        &blame       &format      &close
            &trans      &trans      &trans       &trans       &trans                   &trans   &trans   &trans      &trans   &trans   &trans                   &undo       &redo        &kp DEL      &kp ESC      &quit
            >;
        };

        left {
            bindings = <
            &trans      &trans      &trans       &trans       &trans                                                                                           &trans       &trans       &trans       &trans       &trans
            &trans      &trans      &trans       &trans       &trans       &kp GRAVE                                                              &trans       &trans       &trans       &trans       &trans       &trans
            &trans      &trans      &trans       &kp UP       &trans       &trans                                                                 &trans       &trans       &trans       &trans       &trans       &trans
            &trans      &trans      &kp LEFT     &kp DOWN     &kp RIGHT    &trans                                                                 &trans       &trans       &trans       &trans       &trans       &trans
            &trans      &trans      &trans       &trans       &trans       &trans      &trans   &trans   &trans      &trans   &trans   &trans     &trans       &trans       &trans       &trans       &trans       &trans
            &trans      &trans      &trans       &trans       &trans                   &trans   &trans   &trans      &trans   &trans   &trans                  &trans       &trans       &trans       &trans       &trans
            >;
        };

        lower_layer {
            bindings = <
            &kp C_BRI_DN      &kp C_BRI_UP        &kp C_PREV      &kp C_NEXT      &kp C_PP                                                                                                             &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP  &none           &kp PSCRN
            &trans            &none               &none           &none           &none           &home                                                                                   &kp LPAR     &kp KP_NUM   &kp KP_EQUAL &kp KP_DIVIDE &kp KP_MULTIPLY &trans
            &trans            &none               &none           &kp UP          &none           &end                                                                                    &kp RPAR     &kp KP_N7    &kp KP_N8    &kp KP_N9     &kp KP_MINUS    &trans
            &trans            &none               &kp LEFT        &kp DOWN        &kp RIGHT       &kp PG_UP                                                                               &kp PRCNT    &kp KP_N4    &kp KP_N5    &kp KP_N6     &kp KP_PLUS     &none
            &trans            &kp K_CMENU         &none           &kp F11         &kp F12         &kp PG_DN       &trans      &trans      &trans      &to DEFAULT   &trans      &trans    &kp COMMA    &kp KP_N1    &kp KP_N2    &kp KP_N3     &kp KP_ENTER    &trans
            &trans            &kp CAPS            &kp INS         &kp F11         &kp F12                         &trans      &trans      &trans      &trans        &trans      &trans                 &kp KP_N0    &kp KP_N0    &kp KP_DOT    &kp KP_ENTER    &trans
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &none
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
    };
};
